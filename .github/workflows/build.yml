name: Build Operator

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main, develop ]

env:
  GHCR_REGISTRY: ghcr.io
  GHCR_NAMESPACE: pilab-dev
  GHCR_IMAGE_NAME: pishop-operator
  GHCR_TAG: latest

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: self-hosted
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for version calculation
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
    
    - name: Calculate version
      id: version
      run: |
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          VERSION="pr-${{ github.event.number }}"
        else
          VERSION=$(git describe --tags --always --dirty 2>/dev/null || echo "dev")
        fi
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "COMMIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
    
    - name: Build operator binary
      run: |
        make build VERSION="${{ steps.version.outputs.VERSION }}" \
                    COMMIT_SHA="${{ steps.version.outputs.COMMIT_SHA }}" \
                    BUILD_DATE="${{ steps.version.outputs.BUILD_DATE }}"
    
    - name: Run tests
      run: |
        make test
    
    - name: Generate manifests
      run: |
        make manifests
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to GHCR
      uses: docker/login-action@v3
      with:
        registry: ${{ env.GHCR_REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Debug permissions
      run: |
        echo "üîç Debug information:"
        echo "  Actor: ${{ github.actor }}"
        echo "  Repository: ${{ github.repository }}"
        echo "  Event: ${{ github.event_name }}"
        echo "  Ref: ${{ github.ref }}"
        echo "  Image: ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_NAMESPACE }}/${{ env.GHCR_IMAGE_NAME }}"
        echo ""
        echo "üîê Testing GHCR authentication..."
        echo "${{ secrets.GITHUB_TOKEN }}" | docker login ${{ env.GHCR_REGISTRY }} -u ${{ github.actor }} --password-stdin
        echo ""
        echo "üì¶ Testing package access..."
        docker pull hello-world:latest || true
        echo "‚úÖ Docker is working"
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.deploy
        push: true
        tags: |
          ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_NAMESPACE }}/${{ env.GHCR_IMAGE_NAME }}:${{ steps.version.outputs.VERSION }}
          ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_NAMESPACE }}/${{ env.GHCR_IMAGE_NAME }}:${{ env.GHCR_TAG }}
        platforms: linux/amd64
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          VERSION=${{ steps.version.outputs.VERSION }}
          COMMIT=${{ steps.version.outputs.COMMIT_SHA }}
          BUILD_DATE=${{ steps.version.outputs.BUILD_DATE }}
    
    - name: Output build info
      run: |
        echo "‚úÖ Build completed successfully!"
        echo "üìã Build Information:"
        echo "  Version: ${{ steps.version.outputs.VERSION }}"
        echo "  Commit:  ${{ steps.version.outputs.COMMIT_SHA }}"
        echo "  Date:    ${{ steps.version.outputs.BUILD_DATE }}"
        echo "  Image:   ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_NAMESPACE }}/${{ env.GHCR_IMAGE_NAME }}:${{ steps.version.outputs.VERSION }}"
